{"ast":null,"code":"var _jsxFileName = \"/home/troop/pieDAO/DeFi-Minter/pages/onboarding/Wallets.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\nimport { NoEthereumProviderError, UserRejectedRequestError as UserRejectedRequestErrorInjected } from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector';\nimport { formatEther } from '@ethersproject/units'; // import { metamask, walletConnectIcon , coinbaseWalletIcon } from \"../public\"\n\nimport { useEagerConnect, useInactiveListener } from '../../web3/hooks';\nimport { injected // network,\n// walletconnect,\n// walletlink,\n// ledger,\n// trezor,\n// frame,\n// authereum,\n// fortmatic,\n// portis,\n// squarelink,\n// torus\n} from '../../web3/connectors';\nimport { Spinner } from '../../components/Spinner'; //images to conditionally map to wallet types\n\nconst Injectedimg = __jsx(\"img\", {\n  className: \"wallet-icon  \",\n  src: \"/metamask.svg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 21\n  }\n}); //metamask;\n\n\nconst Walletconnectimg = __jsx(\"img\", {\n  className: \"wallet-icon \",\n  src: \"/walletConnectIcon.svg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 26\n  }\n}); //walletConnectIcon;\n\n\nconst Walletlinkimg = __jsx(\"img\", {\n  className: \"wallet-icon  \",\n  src: \"/coinbaseWalletIcon.svg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }\n}); //coinbaseWalletIcon;\n\n\nvar ConnectorNames;\n\n(function (ConnectorNames) {\n  ConnectorNames[\"Injected\"] = \"Injected\";\n})(ConnectorNames || (ConnectorNames = {}));\n\nconst connectorsByName = {\n  [ConnectorNames.Injected]: injected // [ConnectorNames.Network]: network,\n  // [ConnectorNames.WalletConnect]: walletconnect,\n  // [ConnectorNames.WalletLink]: walletlink,\n  // [ConnectorNames.Ledger]: ledger,\n  // [ConnectorNames.Trezor]: trezor,\n  // [ConnectorNames.Frame]: frame,\n  // [ConnectorNames.Authereum]: authereum,\n  // [ConnectorNames.Fortmatic]: fortmatic,\n  // [ConnectorNames.Portis]: portis,\n  // [ConnectorNames.Squarelink]: squarelink,\n  // [ConnectorNames.Torus]: torus\n\n};\n\nfunction getErrorMessage(error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\";\n  } else if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect || error instanceof UserRejectedRequestErrorFrame) {\n    return 'Please authorize this website to access your Ethereum account.';\n  } else {\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n  }\n}\n\nfunction ChainId() {\n  _s();\n\n  const {\n    chainId\n  } = useWeb3React();\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Chain Id\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"chain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"\\u26D3\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, chainId !== null && chainId !== void 0 ? chainId : ''));\n}\n\n_s(ChainId, \"reA9FJLirN6bQm5X4sUUozGx1bA=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = ChainId;\n\nfunction BlockNumber() {\n  _s2();\n\n  const {\n    chainId,\n    library\n  } = useWeb3React();\n  const [blockNumber, setBlockNumber] = React.useState();\n  React.useEffect(() => {\n    if (!!library) {\n      let stale = false;\n      library.getBlockNumber().then(blockNumber => {\n        if (!stale) {\n          setBlockNumber(blockNumber);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBlockNumber(null);\n        }\n      });\n\n      const updateBlockNumber = blockNumber => {\n        setBlockNumber(blockNumber);\n      };\n\n      library.on('block', updateBlockNumber);\n      return () => {\n        stale = true;\n        library.removeListener('block', updateBlockNumber);\n        setBlockNumber(undefined);\n      };\n    }\n  }, [library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, \"Block Number\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDD22\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, blockNumber === null ? 'Error' : blockNumber !== null && blockNumber !== void 0 ? blockNumber : ''));\n}\n\n_s2(BlockNumber, \"0DoBuqyGtF4sYtNebgbnhkk9wTw=\", false, function () {\n  return [useWeb3React];\n});\n\n_c2 = BlockNumber;\n\nfunction Account() {\n  _s3();\n\n  const {\n    account\n  } = useWeb3React();\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, \"Account\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"robot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"\\uD83E\\uDD16\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, account === null ? '-' : account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : ''));\n}\n\n_s3(Account, \"Yw4fkvk9SNw3FxQ8wmZp/p1e7+E=\", false, function () {\n  return [useWeb3React];\n});\n\n_c3 = Account;\n\nfunction Balance() {\n  _s4();\n\n  const {\n    account,\n    library,\n    chainId\n  } = useWeb3React();\n  const [balance, setBalance] = React.useState();\n  React.useEffect(() => {\n    if (!!account && !!library) {\n      let stale = false;\n      library.getBalance(account).then(balance => {\n        if (!stale) {\n          setBalance(balance);\n        }\n      }).catch(() => {\n        if (!stale) {\n          setBalance(null);\n        }\n      });\n      return () => {\n        stale = true;\n        setBalance(undefined);\n      };\n    }\n  }, [account, library, chainId]); // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, \"Balance\"), __jsx(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"gold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"\\uD83D\\uDCB0\"), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''));\n}\n\n_s4(Balance, \"M1WVM1XYBvl8/UPoZ+Zp2BzPIno=\", false, function () {\n  return [useWeb3React];\n});\n\n_c4 = Balance;\n\nfunction Header() {\n  _s5();\n\n  const {\n    active,\n    error\n  } = useWeb3React(); // console.log(\"HEADER ACTIVE\", active)\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    style: {\n      margin: '1rem',\n      textAlign: 'right'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }\n  }, active ? 'ðŸŸ¢' : error ? 'ðŸ”´' : 'ðŸŸ '), __jsx(\"h3\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: '1fr min-content 1fr',\n      maxWidth: '20rem',\n      lineHeight: '2rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }, __jsx(ChainId, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }), __jsx(BlockNumber, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }), __jsx(Account, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }), __jsx(Balance, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s5(Header, \"5Wc8Z9LF2TZggKnK8RHaXo3D1Z0=\", false, function () {\n  return [useWeb3React];\n});\n\n_c5 = Header;\nexport default function Wallets() {\n  _s6();\n\n  const context = useWeb3React();\n  const {\n    connector,\n    library,\n    chainId,\n    account,\n    activate,\n    deactivate,\n    active,\n    error\n  } = context; // handle logic to recognize the connector currently being activated\n\n  const [activatingConnector, setActivatingConnector] = React.useState();\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined);\n    }\n  }, [activatingConnector, connector]); // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n\n  const triedEager = useEagerConnect(); // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n\n  useInactiveListener(!triedEager || !!activatingConnector);\n  return __jsx(React.Fragment, null, __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 25\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 31\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 37\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 43\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 49\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, \"Welcome to Scoopy Troople's DeFi++ Bakery\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, \"Connect Your Wallet\"), __jsx(\"hr\", {\n    style: {\n      margin: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"wallets\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, Object.keys(connectorsByName).map(name => {\n    const currentConnector = connectorsByName[name];\n    const activating = currentConnector === activatingConnector;\n    const connected = currentConnector === connector;\n    const disabled = !triedEager || !!activatingConnector || connected || !!error;\n    return __jsx(\"div\", {\n      className: \"wallet-icon\",\n      \"data-disabled\": disabled,\n      key: name,\n      onClick: () => {\n        setActivatingConnector(currentConnector);\n        activate(connectorsByName[name]);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }, activating && __jsx(Spinner, {\n      color: 'black',\n      style: {\n        height: '25%',\n        marginLeft: '-1rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 32\n      }\n    }), connected && __jsx(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, \"\\u2705\")), name === \"Injected\" ? \"MetaMask\" : name, name == 'Injected' ? Injectedimg : null, \" \");\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }\n  }, (active || error) && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      marginTop: '2rem',\n      borderRadius: '1rem',\n      borderColor: 'red',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      deactivate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 11\n    }\n  }, \"Deactivate\"), !!error && __jsx(\"h4\", {\n    style: {\n      marginTop: '1rem',\n      marginBottom: '0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, getErrorMessage(error))), __jsx(\"hr\", {\n    style: {\n      margin: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: 'grid',\n      gridGap: '1rem',\n      gridTemplateColumns: 'fit-content',\n      maxWidth: '20rem',\n      margin: 'auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, !!(library && account) && __jsx(\"button\", {\n    style: {\n      height: '3rem',\n      borderRadius: '1rem',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      library.getSigner(account).signMessage('ðŸ‘‹').then(signature => {\n        window.alert(`Success!\\n\\n${signature}`);\n      }).catch(error => {\n        window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''));\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 11\n    }\n  }, \"Sign Message\")));\n}\n\n_s6(Wallets, \"oVtBozX5lH0j7w1/NhHB2/98yx0=\", false, function () {\n  return [useWeb3React, useEagerConnect, useInactiveListener];\n});\n\n_c6 = Wallets;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ChainId\");\n$RefreshReg$(_c2, \"BlockNumber\");\n$RefreshReg$(_c3, \"Account\");\n$RefreshReg$(_c4, \"Balance\");\n$RefreshReg$(_c5, \"Header\");\n$RefreshReg$(_c6, \"Wallets\");","map":{"version":3,"sources":["/home/troop/pieDAO/DeFi-Minter/pages/onboarding/Wallets.tsx"],"names":["React","useWeb3React","UnsupportedChainIdError","NoEthereumProviderError","UserRejectedRequestError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","formatEther","useEagerConnect","useInactiveListener","injected","Spinner","Injectedimg","Walletconnectimg","Walletlinkimg","ConnectorNames","connectorsByName","Injected","getErrorMessage","error","console","ChainId","chainId","BlockNumber","library","blockNumber","setBlockNumber","useState","useEffect","stale","getBlockNumber","then","catch","updateBlockNumber","on","removeListener","undefined","Account","account","substring","length","Balance","balance","setBalance","getBalance","Header","active","margin","textAlign","display","gridGap","gridTemplateColumns","maxWidth","lineHeight","Wallets","context","connector","activate","deactivate","activatingConnector","setActivatingConnector","triedEager","Object","keys","map","name","currentConnector","activating","connected","disabled","height","marginLeft","flexDirection","alignItems","marginTop","borderRadius","borderColor","cursor","marginBottom","getSigner","signMessage","signature","window","alert","message"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Web3ReactProvider, useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from '@web3-react/injected-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector'\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from '@web3-react/frame-connector'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { formatEther } from '@ethersproject/units'\n// import { metamask, walletConnectIcon , coinbaseWalletIcon } from \"../public\"\nimport { useEagerConnect, useInactiveListener } from '../../web3/hooks'\nimport {\n  injected,\n  // network,\n  // walletconnect,\n  // walletlink,\n  // ledger,\n  // trezor,\n  // frame,\n  // authereum,\n  // fortmatic,\n  // portis,\n  // squarelink,\n  // torus\n} from '../../web3/connectors'\nimport { Spinner } from '../../components/Spinner'\n\n\n//images to conditionally map to wallet types\nconst Injectedimg = <img className=\"wallet-icon  \" src=\"/metamask.svg\"/> //metamask;\nconst Walletconnectimg = <img className=\"wallet-icon \" src=\"/walletConnectIcon.svg\" />  //walletConnectIcon;\nconst Walletlinkimg = <img className=\"wallet-icon  \" src=\"/coinbaseWalletIcon.svg\" />//coinbaseWalletIcon;\n\n\nenum ConnectorNames {\n  Injected = 'Injected',\n  // Network = 'Network',\n  // WalletConnect = 'WalletConnect',\n  // WalletLink = 'WalletLink',\n  // Ledger = 'Ledger',\n  // Trezor = 'Trezor',\n  // Frame = 'Frame',\n  // Authereum = 'Authereum',\n  // Fortmatic = 'Fortmatic',\n  // Portis = 'Portis',\n  // Squarelink = 'Squarelink',\n  // Torus = 'Torus'\n}\n\nconst connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  // [ConnectorNames.Network]: network,\n  // [ConnectorNames.WalletConnect]: walletconnect,\n  // [ConnectorNames.WalletLink]: walletlink,\n  // [ConnectorNames.Ledger]: ledger,\n  // [ConnectorNames.Trezor]: trezor,\n  // [ConnectorNames.Frame]: frame,\n  // [ConnectorNames.Authereum]: authereum,\n  // [ConnectorNames.Fortmatic]: fortmatic,\n  // [ConnectorNames.Portis]: portis,\n  // [ConnectorNames.Squarelink]: squarelink,\n  // [ConnectorNames.Torus]: torus\n}\n\nfunction getErrorMessage(error: Error) {\n  if (error instanceof NoEthereumProviderError) {\n    return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.'\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\"\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorWalletConnect ||\n    error instanceof UserRejectedRequestErrorFrame\n  ) {\n    return 'Please authorize this website to access your Ethereum account.'\n  } else {\n    console.error(error)\n    return 'An unknown error occurred. Check the console for more details.'\n  }\n}\n\n\nfunction ChainId() {\n  const { chainId } = useWeb3React()\n\n  return (\n    <>\n      <span>Chain Id</span>\n      <span role=\"img\" aria-label=\"chain\">\n        â›“\n      </span>\n      <span>{chainId ?? ''}</span>\n    </>\n  )\n}\n\nfunction BlockNumber() {\n  const { chainId, library } = useWeb3React()\n\n  const [blockNumber, setBlockNumber] = React.useState<number>()\n  React.useEffect((): any => {\n    if (!!library) {\n      let stale = false\n\n      library\n        .getBlockNumber()\n        .then((blockNumber: number) => {\n          if (!stale) {\n            setBlockNumber(blockNumber)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBlockNumber(null)\n          }\n        })\n\n      const updateBlockNumber = (blockNumber: number) => {\n        setBlockNumber(blockNumber)\n      }\n      library.on('block', updateBlockNumber)\n\n      return () => {\n        stale = true\n        library.removeListener('block', updateBlockNumber)\n        setBlockNumber(undefined)\n      }\n    }\n  }, [library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Block Number</span>\n      <span role=\"img\" aria-label=\"numbers\">\n        ðŸ”¢\n      </span>\n      <span>{blockNumber === null ? 'Error' : blockNumber ?? ''}</span>\n    </>\n  )\n}\n\nfunction Account() {\n  const { account } = useWeb3React()\n\n  return (\n    <>\n      <span>Account</span>\n      <span role=\"img\" aria-label=\"robot\">\n        ðŸ¤–\n      </span>\n      <span>\n        {account === null\n          ? '-'\n          : account\n          ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}`\n          : ''}\n      </span>\n    </>\n  )\n}\n\nfunction Balance() {\n  const { account, library, chainId } = useWeb3React()\n\n  const [balance, setBalance] = React.useState()\n  React.useEffect((): any => {\n    if (!!account && !!library) {\n      let stale = false\n\n      library\n        .getBalance(account)\n        .then((balance: any) => {\n          if (!stale) {\n            setBalance(balance)\n          }\n        })\n        .catch(() => {\n          if (!stale) {\n            setBalance(null)\n          }\n        })\n\n      return () => {\n        stale = true\n        setBalance(undefined)\n      }\n    }\n  }, [account, library, chainId]) // ensures refresh if referential identity of library doesn't change across chainIds\n\n  return (\n    <>\n      <span>Balance</span>\n      <span role=\"img\" aria-label=\"gold\">\n        ðŸ’°\n      </span>\n      <span>{balance === null ? 'Error' : balance ? `Îž${formatEther(balance)}` : ''}</span>\n    </>\n  )\n}\n\nfunction Header() {\n  const { active, error } = useWeb3React()\n  // console.log(\"HEADER ACTIVE\", active)\n  return (\n    <>\n      <h1 style={{ margin: '1rem', textAlign: 'right' }}>{active ? 'ðŸŸ¢' : error ? 'ðŸ”´' : 'ðŸŸ '}</h1>\n      <h3\n        style={{\n          display: 'grid',\n          gridGap: '1rem',\n          gridTemplateColumns: '1fr min-content 1fr',\n          maxWidth: '20rem',\n          lineHeight: '2rem',\n          margin: 'auto'\n        }}\n      >\n        <ChainId />\n        <BlockNumber />\n        <Account />\n        <Balance />\n      </h3>\n    </>\n  )\n}\n\nexport default function Wallets() {\n  const context = useWeb3React<Web3Provider>()\n  const { connector, library, chainId, account, activate, deactivate, active, error } = context\n\n  // handle logic to recognize the connector currently being activated\n  const [activatingConnector, setActivatingConnector] = React.useState<any>()\n  React.useEffect(() => {\n    if (activatingConnector && activatingConnector === connector) {\n      setActivatingConnector(undefined)\n    }\n  }, [activatingConnector, connector])\n\n  // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n  const triedEager = useEagerConnect()\n\n  // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n  useInactiveListener(!triedEager || !!activatingConnector)\n\n  return (\n    <>\n      <br /><br /><br /><br /><br /><br /><br /><br />\n      <h1>Welcome to Scoopy Troople's DeFi++ Bakery</h1>\n      <br />\n      <h1>Connect Your Wallet</h1>\n      {/* <Header /> */}\n      <hr style={{ margin: '2rem' }} />\n      <div\n        className=\"wallets\"\n      >\n        {Object.keys(connectorsByName).map(name => {\n          const currentConnector = connectorsByName[name]\n          const activating = currentConnector === activatingConnector\n          const connected = currentConnector === connector\n          const disabled = !triedEager || !!activatingConnector || connected || !!error\n\n          return (\n            <div\n              className=\"wallet-icon\"\n              data-disabled={disabled}\n              key={name}\n              onClick={() => {\n                setActivatingConnector(currentConnector)\n                activate(connectorsByName[name])\n              }}\n            >\n              <div\n                // style={{\n                //   position: 'absolute',\n                //   top: '0',\n                //   left: '0',\n                //   height: '100%',\n                //   display: 'flex',\n                //   alignItems: 'center',\n                //   color: 'black',\n                //   margin: '0 0 0 1rem'\n                // }}\n              >\n                {activating && <Spinner color={'black'} style={{ height: '25%', marginLeft: '-1rem' }} />}\n                {connected && (\n                  <span role=\"img\" aria-label=\"check\">\n                    âœ…\n                  </span>\n                )}\n              </div>\n              {name === \"Injected\" ? \"MetaMask\" : name} \n              {/**Had some issues with other wallet providers so just metamask for now */}\n              {name == 'Injected' ? Injectedimg : null} {/*name == \"WalletConnect\" ? Walletconnectimg : name == \"WalletLink\" ? Walletlinkimg : null */}\n            </div>\n          )\n        })}\n      </div>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        {(active || error) && (\n          <button\n            style={{\n              height: '3rem',\n              marginTop: '2rem',\n              borderRadius: '1rem',\n              borderColor: 'red',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              deactivate()\n            }}\n          >\n            Deactivate\n          </button>\n        )}\n\n        {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\n      </div>\n\n      <hr style={{ margin: '2rem' }} />\n\n      <div\n        style={{\n          display: 'grid',\n          gridGap: '1rem',\n          gridTemplateColumns: 'fit-content',\n          maxWidth: '20rem',\n          margin: 'auto'\n        }}\n      >\n        {!!(library && account) && (\n          <button\n            style={{\n              height: '3rem',\n              borderRadius: '1rem',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              library\n                .getSigner(account)\n                .signMessage('ðŸ‘‹')\n                .then((signature: any) => {\n                  window.alert(`Success!\\n\\n${signature}`)\n                })\n                .catch((error: any) => {\n                  window.alert('Failure!' + (error && error.message ? `\\n\\n${error.message}` : ''))\n                })\n            }}\n          >\n            Sign Message\n          </button>\n        )}\n        {/* {!!(connector === connectorsByName[ConnectorNames.Network] && chainId) && (\n          <button\n            style={{\n              height: '3rem',\n              borderRadius: '1rem',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              ;(connector as any).changeChainId(chainId === 1 ? 4 : 1)\n            }}\n          >\n            Switch Networks\n          </button>\n        )} */}\n        {/* {connector === connectorsByName[ConnectorNames.WalletConnect] && (\n          <button\n            style={{\n              height: '3rem',\n              borderRadius: '1rem',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              ;(connector as any).close()\n            }}\n          >\n            Kill WalletConnect Session\n          </button>\n        )} */}\n        {/* {connector === connectorsByName[ConnectorNames.WalletLink] && (\n          <button\n            style={{\n              height: '3rem',\n              borderRadius: '1rem',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              ;(connector as any).close()\n            }}\n          >\n            Kill WalletLink Session\n          </button>\n        )} */}\n        {/* {connector === connectorsByName[ConnectorNames.Fortmatic] && (\n          <button\n            style={{\n              height: '3rem',\n              borderRadius: '1rem',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              ;(connector as any).close()\n            }}\n          >\n            Kill Fortmatic Session\n          </button>\n        )} */}\n        {/* {connector === connectorsByName[ConnectorNames.Portis] && (\n          <>\n            {chainId !== undefined && (\n              <button\n                style={{\n                  height: '3rem',\n                  borderRadius: '1rem',\n                  cursor: 'pointer'\n                }}\n                onClick={() => {\n                  ;(connector as any).changeNetwork(chainId === 1 ? 100 : 1)\n                }}\n              >\n                Switch Networks\n              </button>\n            )}\n            <button\n              style={{\n                height: '3rem',\n                borderRadius: '1rem',\n                cursor: 'pointer'\n              }}\n              onClick={() => {\n                ;(connector as any).close()\n              }}\n            >\n              Kill Portis Session\n            </button>\n          </>\n        )} */}\n        {/* {connector === connectorsByName[ConnectorNames.Torus] && (\n          <button\n            style={{\n              height: '3rem',\n              borderRadius: '1rem',\n              cursor: 'pointer'\n            }}\n            onClick={() => {\n              ;(connector as any).close()\n            }}\n          >\n            Kill Torus Session\n          </button>\n        )} */}\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}