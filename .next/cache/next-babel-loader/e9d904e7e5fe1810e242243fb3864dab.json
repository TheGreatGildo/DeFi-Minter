{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/troop/pieDAO/DeFi-Minter/pages/app/deposits/BakeDeFi.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useForm } from \"react-hook-form\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport web3 from \"../../../web3/web3\";\nimport defiplusplus from \"../../../web3/defiplusplus\";\n\nconst InputDai = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    chainId,\n    account,\n    activate,\n    active\n  } = useWeb3React();\n  const {\n    0: priceOfPies,\n    1: setPriceOfPies\n  } = useState({});\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    watch,\n    errors\n  } = useForm();\n\n  const onCalculatePie = data => {\n    const sizeWei = web3.utils.toWei(data.size);\n    defiplusplus.methods.calcToPie(\"0x880873a96ce38c7fd39dc714592902b069bde048\", sizeWei).call().then(res => {\n      setPriceOfPies(res * 1.01);\n    });\n  };\n\n  const mintDemPies = async data => {\n    const bigPie = await web3.utils.toWei(data.size);\n    const amount = priceOfPies.toString();\n    console.log(\"bigpie\", bigPie);\n    console.log(\"PRICE IN ETH\", priceOfPies);\n    await defiplusplus.methods.toPie(\"0x880873a96ce38c7fd39dc714592902b069bde048\", bigPie).send({\n      from: account,\n      value: amount\n    });\n  };\n\n  console.log(\"PIECALC\", priceOfPies);\n  console.log(\"PIECALC\", typeof priceOfPies);\n\n  const fetcher = library => (...args) => {\n    const [method, ...params] = args;\n    console.log(method, params);\n    return library[method](...params);\n  };\n\n  const Balance = () => {\n    _s();\n\n    const {\n      account,\n      library\n    } = useWeb3React();\n    const {\n      data: balance\n    } = useSWR([\"getBalance\", account, \"latest\"], {\n      fetcher: fetcher(library)\n    });\n\n    if (!balance) {\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      }, \"...\");\n    }\n\n    return __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, \"Balance: \", parseFloat(formatEther(balance)).toPrecision(8), \" \\u039E\");\n  };\n\n  _s(Balance, \"+/AQccGELke0gQf75V/0lqUiw+s=\", false, function () {\n    return [useWeb3React, useSWR];\n  });\n\n  const handleChanges = event => {\n    onCalculatePie(_objectSpread(_objectSpread({}, priceOfPies), {}, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const priceInEth = val => {\n    const amt = val / 1000000000000000000;\n    return amt;\n  };\n\n  const ethCost = priceInEth(priceOfPies);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"title centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Bake Some DeFi++\"), __jsx(\"div\", {\n    className: \"bal-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"row-dai from\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"(\", Balance(), \")\"), __jsx(\"form\", {\n    onSubmit: handleSubmit(mintDemPies),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"I want to mint this many pies:\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"row-dai left-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"field-container form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, __jsx(\"input\", {\n    className: \"field-input\",\n    name: \"size\",\n    type: \"number\",\n    defaultValue: \"1\",\n    ref: register,\n    onChange: handleChanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), \" \", __jsx(\"div\", {\n    className: \"dai-fixer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"DeFi++ \"))), __jsx(\"div\", {\n    className: \"row-dai left-align\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Approximate Price (estimated 1% slippage)\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }), __jsx(\"div\", {\n    className: \"dai-fixer subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, ethCost, \"ETH \")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    className: \"button is-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Mint\")))));\n};\n\n_s2(InputDai, \"Zaph6ZBzF8tBDZpYS8SrFAY8WKY=\", false, function () {\n  return [useWeb3React, useForm];\n});\n\n_c = InputDai;\nexport default InputDai;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputDai\");","map":{"version":3,"sources":["/home/troop/pieDAO/DeFi-Minter/pages/app/deposits/BakeDeFi.js"],"names":["React","useState","useEffect","useSWR","formatEther","useForm","useWeb3React","web3","defiplusplus","InputDai","chainId","account","activate","active","priceOfPies","setPriceOfPies","register","handleSubmit","setValue","watch","errors","onCalculatePie","data","sizeWei","utils","toWei","size","methods","calcToPie","call","then","res","mintDemPies","bigPie","amount","toString","console","log","toPie","send","from","value","fetcher","library","args","method","params","Balance","balance","parseFloat","toPrecision","handleChanges","event","target","name","priceInEth","val","amt","ethCost"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useSWR from \"swr\";\nimport { formatEther } from \"@ethersproject/units\";\nimport { useForm } from \"react-hook-form\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport web3 from \"../../../web3/web3\";\nimport defiplusplus from \"../../../web3/defiplusplus\";\n\n\nconst InputDai = () => {\n  const { chainId, account, activate, active } = useWeb3React();\n  const [priceOfPies, setPriceOfPies] = useState({});\n\n  const { register, handleSubmit, setValue, watch, errors } = useForm();\n\n  const onCalculatePie = (data) => {\n    const sizeWei = web3.utils.toWei(data.size);\n    defiplusplus.methods\n      .calcToPie(\"0x880873a96ce38c7fd39dc714592902b069bde048\", sizeWei)\n      .call()\n      .then((res) => {\n        setPriceOfPies(res * 1.01);\n      });\n  };\n  const mintDemPies = async (data) => {\n    const bigPie = await web3.utils.toWei(data.size);\n    const amount = priceOfPies.toString()\n    console.log(\"bigpie\", bigPie)\n    console.log(\"PRICE IN ETH\", priceOfPies)\n    await defiplusplus.methods\n      .toPie(\"0x880873a96ce38c7fd39dc714592902b069bde048\", bigPie)\n      .send({ from: account, value: amount });\n  };\n\n  console.log(\"PIECALC\", priceOfPies);\n  console.log(\"PIECALC\", typeof(priceOfPies));\n\n  const fetcher = (library) => (...args) => {\n    const [method, ...params] = args;\n    console.log(method, params);\n    return library[method](...params);\n  };\n\n  const Balance = () => {\n    const { account, library } = useWeb3React();\n    const { data: balance } = useSWR([\"getBalance\", account, \"latest\"], {\n      fetcher: fetcher(library),\n    });\n    if (!balance) {\n      return <span>...</span>;\n    }\n    return (\n      <span>Balance: {parseFloat(formatEther(balance)).toPrecision(8)} Ξ</span>\n    );\n  };\n\n  const handleChanges = (event) => {\n    onCalculatePie({ ...priceOfPies, [event.target.name]: event.target.value });\n  };\n  const priceInEth = (val) => {\n    const amt = val / 1000000000000000000;\n    return amt;\n  };\n  const ethCost = priceInEth(priceOfPies);\n  return (\n    <div>\n      <div>\n        <div className=\"title centered\">Bake Some DeFi++</div>\n        <div className=\"bal-box\">\n          <div className=\"row-dai from\">({Balance()})</div>\n          <form onSubmit={handleSubmit(mintDemPies)}>\n            <div>I want to mint this many pies:</div>\n            <br />\n            <div className=\"row-dai left-align\">\n              <div className=\"field-container form-label\">\n                <input\n                  className=\"field-input\"\n                  name=\"size\"\n                  type=\"number\"\n                  defaultValue=\"1\"\n                  ref={register}\n                  onChange={handleChanges}\n                />{\" \"}\n                <div className=\"dai-fixer\">DeFi++ </div>\n                {/*defaultValue={props.value} replace default value*/}\n              </div>\n            </div>\n\n            <div className=\"row-dai left-align\">\n              <div>Approximate Price (estimated 1% slippage)</div>\n              <br />\n              <div className=\"dai-fixer subtitle\">{ethCost}ETH </div>\n              {/*defaultValue={props.value} replace default value*/}\n            </div>\n            <br />\n            <button className=\"button is-primary\">Mint</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputDai;\n"]},"metadata":{},"sourceType":"module"}