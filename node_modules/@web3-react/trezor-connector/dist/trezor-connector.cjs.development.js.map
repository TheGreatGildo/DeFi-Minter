{"version":3,"file":"trezor-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport Web3ProviderEngine from 'web3-provider-engine'\nimport { TrezorSubprovider } from '@0x/subproviders/lib/src/subproviders/trezor' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport CacheSubprovider from 'web3-provider-engine/subproviders/cache.js'\nimport { RPCSubprovider } from '@0x/subproviders/lib/src/subproviders/rpc_subprovider' // https://github.com/0xProject/0x-monorepo/issues/1400\n\ninterface TrezorConnectorArguments {\n  chainId: number\n  url: string\n  pollingInterval?: number\n  requestTimeoutMs?: number\n  config?: any\n  manifestEmail: string\n  manifestAppUrl: string\n}\n\nexport class TrezorConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly url: string\n  private readonly pollingInterval?: number\n  private readonly requestTimeoutMs?: number\n  private readonly config: any\n  private readonly manifestEmail: string\n  private readonly manifestAppUrl: string\n\n  private provider: any\n\n  constructor({\n    chainId,\n    url,\n    pollingInterval,\n    requestTimeoutMs,\n    config = {},\n    manifestEmail,\n    manifestAppUrl\n  }: TrezorConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.url = url\n    this.pollingInterval = pollingInterval\n    this.requestTimeoutMs = requestTimeoutMs\n    this.config = config\n    this.manifestEmail = manifestEmail\n    this.manifestAppUrl = manifestAppUrl\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      const { default: TrezorConnect } = await import('trezor-connect')\n      TrezorConnect.manifest({\n        email: this.manifestEmail,\n        appUrl: this.manifestAppUrl\n      })\n      const engine = new Web3ProviderEngine({ pollingInterval: this.pollingInterval })\n      engine.addProvider(new TrezorSubprovider({ trezorConnectClientApi: TrezorConnect, ...this.config }))\n      engine.addProvider(new CacheSubprovider())\n      engine.addProvider(new RPCSubprovider(this.url, this.requestTimeoutMs))\n      this.provider = engine\n    }\n\n    this.provider.start()\n\n    return { provider: this.provider, chainId: this.chainId }\n  }\n\n  public async getProvider(): Promise<Web3ProviderEngine> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.chainId\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider._providers[0].getAccountsAsync(1).then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider.stop()\n  }\n}\n"],"names":["TrezorConnector","chainId","url","pollingInterval","requestTimeoutMs","config","manifestEmail","manifestAppUrl","supportedChainIds","activate","provider","start","TrezorConnect","manifest","email","appUrl","engine","Web3ProviderEngine","addProvider","TrezorSubprovider","trezorConnectClientApi","CacheSubprovider","RPCSubprovider","getProvider","getChainId","getAccount","_providers","getAccountsAsync","then","accounts","deactivate","stop","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBaA,eAAb;AAAA;;AAWE;;;QACEC,eAAAA;QACAC,WAAAA;QACAC,uBAAAA;QACAC,wBAAAA;2BACAC;QAAAA,kCAAS;QACTC,qBAAAA;QACAC,sBAAAA;AAEA,0CAAM;AAAEC,MAAAA,iBAAiB,EAAE,CAACP,OAAD;AAArB,KAAN;AAEA,UAAKA,OAAL,GAAeA,OAAf;AACA,UAAKC,GAAL,GAAWA,GAAX;AACA,UAAKC,eAAL,GAAuBA,eAAvB;AACA,UAAKC,gBAAL,GAAwBA,gBAAxB;AACA,UAAKC,MAAL,GAAcA,MAAd;AACA,UAAKC,aAAL,GAAqBA,aAArB;AACA,UAAKC,cAAL,GAAsBA,cAAtB;;AACD;;AA7BH;;AAAA,SA+BeE,QA/Bf;AAAA;;AA6CI,eAAKC,QAAL,CAAcC,KAAd;;AAEA,eAAO;AAAED,UAAAA,QAAQ,EAAE,OAAKA,QAAjB;AAA2BT,UAAAA,OAAO,EAAE,OAAKA;AAAzC,SAAP;;;mBAfK;;;YAAD,CAAC,OAAKS;iCACiC,mEAAO,gBAAP;gBAAxBE;AACjBA,YAAAA,aAAa,CAACC,QAAd,CAAuB;AACrBC,cAAAA,KAAK,EAAE,OAAKR,aADS;AAErBS,cAAAA,MAAM,EAAE,OAAKR;AAFQ,aAAvB;AAIA,gBAAMS,MAAM,GAAG,IAAIC,kBAAJ,CAAuB;AAAEd,cAAAA,eAAe,EAAE,OAAKA;AAAxB,aAAvB,CAAf;AACAa,YAAAA,MAAM,CAACE,WAAP,CAAmB,IAAIC,wBAAJ;AAAwBC,cAAAA,sBAAsB,EAAER;AAAhD,eAAkE,OAAKP,MAAvE,EAAnB;AACAW,YAAAA,MAAM,CAACE,WAAP,CAAmB,IAAIG,gBAAJ,EAAnB;AACAL,YAAAA,MAAM,CAACE,WAAP,CAAmB,IAAII,8BAAJ,CAAmB,OAAKpB,GAAxB,EAA6B,OAAKE,gBAAlC,CAAnB;AACA,mBAAKM,QAAL,GAAgBM,MAAhB;;;;;;AAMH,KAhDH;AAAA;AAAA;AAAA;;AAAA,SAkDeO,WAlDf;AAAA;mBAmDW;;AAAP,6BAAO,OAAKb,QAAZ;AACD,KApDH;AAAA;AAAA;AAAA;;AAAA,SAsDec,UAtDf;AAAA;mBAuDW;;AAAP,6BAAO,OAAKvB,OAAZ;AACD,KAxDH;AAAA;AAAA;AAAA;;AAAA,SA0DewB,UA1Df;AAAA;mBA2DW;;AAAP,6BAAO,OAAKf,QAAL,CAAcgB,UAAd,CAAyB,CAAzB,EAA4BC,gBAA5B,CAA6C,CAA7C,EAAgDC,IAAhD,CAAqD,UAACC,QAAD;AAAA,eAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,OAArD,CAAP;AACD,KA5DH;AAAA;AAAA;AAAA;;AAAA,SA8DSC,UA9DT,GA8DS;AACL,SAAKpB,QAAL,CAAcqB,IAAd;AACD,GAhEH;;AAAA;AAAA,EAAqCC,mCAArC;;;;"}